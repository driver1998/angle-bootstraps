name: Matrixed UWP Build

on: 
  push:
    branches: 
      - master
  #schedule:
  #  - cron: "0 0 * * *"

jobs:
  windows:
    strategy:
      matrix:
        os: [windows-2019]
        variant: [Release]
        arch: [arm, arm64]
    runs-on: ${{ matrix.os }}
    name: UWP ${{ matrix.variant }} ${{ matrix.arch }} on ${{ matrix.os }}
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: '0'
      DEPOT_TOOLS_METRICS: '0'
      PYTHON_HOME: ''
    steps:
      - name: Check out source
        uses: actions/checkout@v1
      - name: Fetch depot_tools
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile depot_tools.zip
          &7z x depot_tools.zip -odepot_tools
          Remove-Item depot_tools.zip
      - name: Config depot_tools
        shell: pwsh
        run: |
            $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
            $env:Path = "$pwd\depot_tools;" + $env:Path
            cd depot_tools
            ./update_depot_tools.bat
            dir
      - name: Get Angle Source
        shell: pwsh
        run: |
          del C:\ProgramData\Chocolatey\bin\pytho*.exe
          git clone https://chromium.googlesource.com/angle/angle
          cd angle
          # git apply ../patches/0001-HACK-Allow-feature-level-10.0-to-use-ES-3.0.patch
          git apply ../patches/XXXX-Fix-UWP-build.patch
      - name: Bootstrap ${{ matrix.variant }} ANGLE UWP dependencies on ${{ matrix.os }}
        shell: pwsh
        run: |
          $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
          $env:Path = "$pwd\depot_tools;" + $env:Path
          refreshenv
          cd angle
          python scripts\bootstrap.py
          refreshenv
          gclient sync
      - name: Set up build projects
        shell: pwsh
        run: |
          choco install llvm 2>&1>$null
          $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
          $env:Path = "$pwd\depot_tools;" + $env:Path
          cd angle
          gn gen out/Build_UWP_${{ matrix.arch }} --args='is_clang=false is_debug=false angle_enable_null=false target_cpu=\"${{ matrix.arch }}\" target_os=\"winuwp\" angle_is_winuwp=true'
      - name: Build Angle
        shell: pwsh
        run: |
          $env:Path = "$pwd\depot_tools;" + $env:Path
          &("C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat")
          cd angle
          autoninja -C out\Build_UWP_${{ matrix.arch }} libANGLE
          autoninja -C out\Build_UWP_${{ matrix.arch }} libEGL
          autoninja -C out\Build_UWP_${{ matrix.arch }} libGLESv1_CM 
          autoninja -C out\Build_UWP_${{ matrix.arch }} libGLESv2
      - name: Copy Binaries
        shell: pwsh
        run: |
          New-Item -Name "UWP_${{ matrix.arch }}" -ItemType "directory"
          New-Item -Name "lib" -ItemType "directory"
          New-Item -Name "Binaries" -ItemType "directory"
          Copy-Item -Path "angle\out\Build_UWP_${{ matrix.arch }}\*.lib" -Destination "UWP_${{ matrix.arch }}" -Recurse
          Copy-Item -Path "angle\out\Build_UWP_${{ matrix.arch }}\*.dll" -Destination "UWP_${{ matrix.arch }}" -Recurse
          Copy-Item -Path "angle\out\Build_UWP_${{ matrix.arch }}\*.pdb" -Destination "UWP_${{ matrix.arch }}" -Recurse
          Move-Item -Path "UWP_${{ matrix.arch }}" -Destination "lib"
          Move-Item -Path "lib" -Destination "Binaries"
          Copy-Item -Path "angle\include" -Destination "Binaries" -Recurse 
          7z a ANGLE.zip Binaries\*
      - name: Archive ${{ matrix.variant }} ${{ matrix.arch }} ANGLE UWP archive on ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: Angle UWP Libraries for ${{ matrix.variant }} ${{ matrix.arch }} on ${{ matrix.os }}
          path: Angle.zip
